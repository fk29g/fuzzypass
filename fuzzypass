#!/usr/bin/env bash

shopt -s nullglob globstar

WAYLAND_MENUS=("dmenu-wl" "fuzzel" "rofi" "wofi" "tofi")
X11_MENUS=("dmenu" "rofi")
menus=()
dmenu=()

if [[ -n $WAYLAND_DISPLAY ]]; then
    menus=("${WAYLAND_MENUS[@]}")
    xdotool="wtype -"
elif [[ -n $DISPLAY ]]; then
    menus=("${X11_MENUS[@]}")
    xdotool="xdotool type --clearmodifiers --file -"
else
    echo "Error: No Wayland or X11 display detected" >&2
    exit 1
fi

tflag=false
oflag=false
pwotp="password"

while getopts "to" flag; do
    case "$flag" in
        t)
            xdotool_binary=$(printf $xdotool | cut -d ' ' -f1)
            if [[ -z $(command -v $xdotool_binary) ]]; then
                echo "$xdotool_binary is not installed. Can't type." >&2
                exit 1
            fi
            tflag=true ;;
        o)
            if [ ! -f /usr/lib/password-store/extensions/otp.bash ]; then
                echo "pass-otp is not installed. Can't handle OTPs."
                exit 1
            fi
            oflag=true
            pwotp="OTP"
            ;;
        \?)
            exit 1 ;;
    esac
done

shift $((OPTIND - 1))

for menu in "${menus[@]}"; do
    if [[ -n $(command -v $menu) ]]; then
        case "$menu" in
            "dmenu") dmenu=("dmenu") ;;
            "dmenu-wl") dmenu=("dmenu-wl") ;;
            "fuzzel") dmenu=("fuzzel" "-d") ;;
            "rofi") dmenu=("rofi" "-dmenu") ;;
            "wofi") dmenu=("wofi" "-d") ;;
            "tofi") dmenu=("tofi") ;;
        esac
        break
    fi
done

if [[ -z $dmenu ]]; then
    echo "No dmenu-compatible program found. Install one of:" >&2
    echo "${menus[*]}" >&2
    exit 1
fi

prefix=${PASSWORD_STORE_DIR-~/.password-store}
password_files=( "$prefix"/**/*.gpg )
password_files=( "${password_files[@]#"$prefix"/}" )
password_files=( "${password_files[@]%.gpg}" )

password=$(printf '%s\n' "${password_files[@]}" | "${dmenu[@]}" "$@")

[[ -n $password ]] || exit

if [ $tflag = true ]; then
    if [ $oflag = true ]; then
        printf %s "$(pass otp show $password)" | $xdotool
    else
        pass show "$password" | { IFS= read -r pass; printf %s "$pass"; } | $xdotool
    fi
else
    if [ $oflag = true ]; then
        pass otp show -c "$password" 2> /dev/null
    else
        pass show -c "$password" 2> /dev/null
    fi

    notify=""

    if [[ -n $(command -v notify-send) ]]; then
        notify="notify-send"
    elif [[ -n $(command -v dunstify) ]]; then
        notify="dunstify"
    fi

    if [[ -n $notify ]]; then
        $notify -a "fuzzypass" "Copied $pwotp for $password to clipboard" "Will clear in 45 seconds" -t 3000
    fi
fi
